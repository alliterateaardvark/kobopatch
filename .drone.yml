kind: pipeline
name: kobopatch

steps:
- name: deps
  image: golang:1.13-buster
  commands:
  - go mod download
- name: test
  image: golang:1.13-buster
  commands:
  - go test -v ./...

---

kind: pipeline
name: test-patches

steps:
- name: build
  image: golang:1.13-buster
  commands:
  - mkdir build
  - CGO_ENABLED=1 go build -o build/kobopatch ./kobopatch
- name: get-patches
  image: golang:1.13-buster
  commands:
  - git clone https://github.com/geek1011/kobopatch-patches
  - cd kobopatch-patches
  - git checkout "$(git describe --tags --abbrev=0 HEAD)"
  - go build -o ./scripts/testscript ./scripts/test
- name: test
  image: golang:1.13-buster
  commands:
  - cd kobopatch-patches
  - ./scripts/testscript --kpbin ../build/kobopatch

---

kind: pipeline
name: release

platform:
  os: linux
  arch: amd64

steps:
- name: notes
  image: golang:1.13-buster
  commands:
  - git log "$(git describe --tags --abbrev=0 HEAD~1)..HEAD" --oneline --format='%h %s' | tee -a notes.md
  when: {ref: {include: ["refs/tags/*"]}}
- name: build-linux-amd64
  image: docker.elastic.co/beats-dev/golang-crossbuild:1.13.6-main
  command: [
    "--platforms", "linux/amd64",
    "--build-cmd", "
      CGO_ENABLED=1 go build -ldflags \"-s -w -linkmode external -X main.version=$(git describe --tags --always)\" -o build/kobopatch-linux-64bit ./kobopatch &&
      CGO_ENABLED=1 go build -ldflags \"-s -w -linkmode external -X main.version=$(git describe --tags --always)\" -o build/kobopatch-apply-linux-64bit ./tools/kobopatch-apply &&
      CGO_ENABLED=1 go build -ldflags \"-s -w -linkmode external -X main.version=$(git describe --tags --always)\" -o build/cssextract-linux-64bit ./tools/cssextract",
  ]
- name: build-linux-386
  image: docker.elastic.co/beats-dev/golang-crossbuild:1.13.6-main
  command: [
    "--platforms", "linux/amd64",
    "--build-cmd", "
      CGO_ENABLED=1 go build -ldflags \"-s -w -linkmode external -X main.version=$(git describe --tags --always)\" -o build/kobopatch-linux-32bit ./kobopatch &&
      CGO_ENABLED=1 go build -ldflags \"-s -w -linkmode external -X main.version=$(git describe --tags --always)\" -o build/kobopatch-apply-linux-32bit ./tools/kobopatch-apply &&
      CGO_ENABLED=1 go build -ldflags \"-s -w -linkmode external -X main.version=$(git describe --tags --always)\" -o build/cssextract-linux-32bit ./tools/cssextract",
  ]
- name: build-linux-arm
  image: docker.elastic.co/beats-dev/golang-crossbuild:1.13.6-arm
  command: [
    "--platforms", "linux/armv6",
    "--build-cmd", "
      CGO_ENABLED=1 go build -ldflags \"-s -w -linkmode external -X main.version=$(git describe --tags --always)\" -o build/kobopatch-linux-arm ./kobopatch &&
      CGO_ENABLED=1 go build -ldflags \"-s -w -linkmode external -X main.version=$(git describe --tags --always)\" -o build/kobopatch-apply-linux-arm ./tools/kobopatch-apply &&
      CGO_ENABLED=1 go build -ldflags \"-s -w -linkmode external -X main.version=$(git describe --tags --always)\" -o build/cssextract-linux-arm ./tools/cssextract",
  ]
- name: build-windows-386
  image: docker.elastic.co/beats-dev/golang-crossbuild:1.13.6-main
  command: [
    "--platforms", "windows/386",
    "--build-cmd", "
      CGO_ENABLED=1 go build -ldflags \"-s -w -linkmode external -X main.version=$(git describe --tags --always) -extldflags -static\" -o build/koboptch-windows.exe ./kobopatch &&
      CGO_ENABLED=1 go build -ldflags \"-s -w -linkmode external -X main.version=$(git describe --tags --always) -extldflags -static\" -o build/koboptch-apply-windows.exe ./tools/kobopatch-apply &&
      CGO_ENABLED=1 go build -ldflags \"-s -w -linkmode external -X main.version=$(git describe --tags --always) -extldflags -static\" -o build/cssextract-windows.exe ./tools/cssextract",
  ]
- name: build-darwin-amd64
  image: docker.elastic.co/beats-dev/golang-crossbuild:1.13.6-darwin
  command: [
    "--platforms", "darwin/amd64",
    "--build-cmd", "
      CGO_ENABLED=1 go build -ldflags \"-s -w -linkmode external -X main.version=$(git describe --tags --always)\" -o build/kobopatch-darwin-64bit ./kobopatch &&
      CGO_ENABLED=1 go build -ldflags \"-s -w -linkmode external -X main.version=$(git describe --tags --always)\" -o build/kobopatch-apply-darwin-64bit ./tools/kobopatch-apply &&
      CGO_ENABLED=1 go build -ldflags \"-s -w -linkmode external -X main.version=$(git describe --tags --always)\" -o build/cssextract-darwin-64bit ./tools/cssextract",
  ]
- name: list
  image: golang:1.13-buster
  commands:
  - ls -lah
  depends_on: [build-linux-amd64, build-linux-arm, build-linux-386, build-windows-386, build-darwin-amd64]
- name: release
  image: plugins/github-release
  settings:
    api_key: {from_secret: GITHUB_TOKEN}
    title: ${DRONE_TAG}
    note: notes.md
    files: build/*
    draft: true
  when: {ref: {include: ["refs/tags/*"]}}
  depends_on: [notes, list]

depends_on:
- kobopatch
- test-patches