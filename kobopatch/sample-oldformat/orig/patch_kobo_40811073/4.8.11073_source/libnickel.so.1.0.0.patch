# libnickel.so.1.0.0 in firmware 4.8.11073 (b628114af7)
# For use by patch32lsb v0.10 or later.

#
# Lines beginning with '#' (such as this one) are treated as comments (ignored.)
# To 'comment out' a line means to insert a '#' character at the beginning.
# To 'uncomment' a line means to remove the '#' character from the beginning.
# Some patch options are commented out, and can be enabled by uncommenting.
#
# When changing replacement values to customise a patch, only change the
# right-most value. E.g. only change `New value` in the line below:
#   replace_string = ADDR, `Old value`, `New value`
#


#
# The following two patches are alternatives, don't enable more than one.
#
# `My 10 line spacing values`
# `My 24 line spacing values`
#
# Beware that the KePub reader has problems with its page break position
# when narrow line spacings are selected, depending on which font is used.
# You can increase the replace_float values at the bottom of each patch to
# avoid those problems, or else simply refrain from selecting narrowest
# line spacings when reading KePubs.
#

<Patch>
patch_name = `My 10 line spacing values`
patch_enable = `yes`
# patch_group = `Line spacing values alternatives`
#
## This patch changes the values on the line spacing adjustment slider,
## reducing the number of spacing options from 15 to 10, but allowing
## much narrower spacing values to be set.
#
# Bypass code-constructed values 1.0, 1.2, 1.5, 2.0, 3.0
replace_bytes = 659D64, BE F5 CE E9, 00 46 00 46
replace_bytes = 659DBA, BE F5 A4 E9, 00 46 00 46
replace_bytes = 659DE4, BE F5 8E E9, 00 46 00 46
replace_bytes = 659E20, BE F5 70 E9, 00 46 00 46
replace_bytes = 659E86, BE F5 3E E9, 00 46 00 46
#
#
# 10 values for replacement, change these replace_float values to suit:
base_address = 659F20
replace_float = 0000, 1.05, 0.8
replace_float = 0008, 1.07, 0.85
replace_float = 0010, 1.1, 0.875
replace_float = 0018, 1.35, 0.9
replace_float = 0020, 1.7, 0.925
replace_float = 0028, 1.8, 0.95
replace_float = 0030, 2.2, 0.975
replace_float = 0038, 2.4, 1.0
replace_float = 0040, 2.6, 1.05
replace_float = 0048, 2.8, 1.1
</Patch>


<Patch>
patch_name = `My 24 line spacing values`
patch_enable = `no`
# patch_group = `Line spacing values alternatives`
#
## This patch changes the values on the line spacing adjustment slider,
## increasing the number of spacing options from 15 to 24, and allowing
## much narrower spacing values to be set.
#
# save r5, initialise loop counter
replace_bytes = 659D64, BE F5 CE E9 6D A3, A9 46 00 25 ED 00
# loop to load 14 vals from new table
replace_bytes = 659D6A, D3 E9 00 23 07 F1, 20 46 04 A1 29 44
replace_bytes = 659D70, 80 01 20 46, BE F5 C8 E9
replace_bytes = 659D74, 61 E9 1C 23 BE F5, 08 35 70 2D F7 D1
# jump over new table
replace_bytes = 659D7A, C4 E9 6A A3 D3 E9, 7C E0 00 BF 00 BF
# new table: 14 8-aligned doubles
base_address = 659D80
replace_bytes = 0000, 00 23 07 F1 80 01 20 46, 00 00 00 00 00 00 F0 3F
replace_bytes = 0008, 61 E9 1A 23 BE F5 BA E9, 00 00 00 00 00 00 F0 3F
replace_bytes = 0010, 67 A3 D3 E9 00 23 07 F1, 00 00 00 00 00 00 F0 3F
replace_bytes = 0018, 80 01 20 46 61 E9 18 23, 00 00 00 00 00 00 F0 3F
replace_bytes = 0020, BE F5 B0 E9 43 F2 33 33, 00 00 00 00 00 00 F0 3F
replace_bytes = 0028, 4F F0 33 32 C3 F6 F3 73, 00 00 00 00 00 00 F0 3F
replace_bytes = 0030, 07 F1 80 01 20 46 61 E9, 00 00 00 00 00 00 F0 3F
replace_bytes = 0038, 16 23 BE F5 A4 E9 5E A3, 00 00 00 00 00 00 F0 3F
replace_bytes = 0040, D3 E9 00 23 07 F1 80 01, 00 00 00 00 00 00 F0 3F
replace_bytes = 0048, 20 46 61 E9 14 23 BE F5, 00 00 00 00 00 00 F0 3F
replace_bytes = 0050, 9A E9 00 23 00 22 C3 F6, 00 00 00 00 00 00 F0 3F
replace_bytes = 0058, F8 73 07 F1 80 01 20 46, 00 00 00 00 00 00 F0 3F
replace_bytes = 0060, 61 E9 12 23 BE F5 8E E9, 00 00 00 00 00 00 F0 3F
replace_bytes = 0068, 55 A3 D3 E9 00 23 07 F1, 00 00 00 00 00 00 F0 3F
base_address = 00000000
# initialise loop counter
replace_bytes = 659E74, 00 23 00 22, 00 BF 00 25
# loop to load 10 vals from old table
replace_bytes = 659E78, C4 F2 08 03 07 F1, 20 46 29 A1 29 44
replace_bytes = 659E7E, 80 01 20 46, BE F5 42 E9
replace_bytes = 659E82, 61 E9 02 23 BE F5, 08 35 50 2D F7 D1
# restore r5
replace_bytes = 659E88, 3E E9, 4D 46
# continue at 659E8A
#
#
# Replacement value: the number of initial line spacing values to exclude from
# the line spacing slider; minimum 0, maximum 13. E.g. 9 will result in a
# slider with 15 positions, starting from the 10th replace_float value below.
replace_int = 659D66, 0, 0
#
# 24 replacement line spacing values: change these replace_float values to suit
# your device and preferences:
#
base_address = 659D80
replace_float = 0000, 1.0, 0.75
replace_float = 0008, 1.0, 0.78
replace_float = 0010, 1.0, 0.8
replace_float = 0018, 1.0, 0.82
replace_float = 0020, 1.0, 0.84
replace_float = 0028, 1.0, 0.86
replace_float = 0030, 1.0, 0.88
replace_float = 0038, 1.0, 0.9
replace_float = 0040, 1.0, 0.92
replace_float = 0048, 1.0, 0.94
replace_float = 0050, 1.0, 0.96
replace_float = 0058, 1.0, 0.98
replace_float = 0060, 1.0, 1.0
replace_float = 0068, 1.0, 1.02
base_address = 659F20
replace_float = 0000, 1.05, 1.05
replace_float = 0008, 1.07, 1.07
replace_float = 0010, 1.1, 1.1
replace_float = 0018, 1.35, 1.15
replace_float = 0020, 1.7, 1.2
replace_float = 0028, 1.8, 1.25
replace_float = 0030, 2.2, 1.3
replace_float = 0038, 2.4, 1.35
replace_float = 0040, 2.6, 1.4
replace_float = 0048, 2.8, 1.5
#
# The first 14 replacement values above should allow the line spacing to be
# adjusted in increments of one pixel when using a medium sized font on a high
# resolution device. If you use a smaller font size and/or a lower resolution
# device you might find that increasing the slider one step at a time doesn't
# always result in a line spacing increase at each step. In that case, you
# might want to use replacement values that are not quite so close together.
#
# For example: (I use these values on my 758x1024 Glo)
#
#  0.7 0.725 0.75 0.775 0.8 0.825 0.85 0.875 0.9 0.925 0.95 0.975 1.0 1.025 ...
#
# or: (these might better suit the 600x800 Touch)
#
#  0.6 0.633 0.667 0.7 0.733 0.767 0.8 0.833 0.867 9.0 9.33 9.67 1.0 1.025 ...
#
</patch>


<Patch>
patch_name = `Custom left & right margins`
patch_enable = `yes`
# Multi-version patch: 2.8.1 - 4.8.11073+
#
## This patch sets the size of the margins added by the margins adjustment
## slider, as a percentage of screen width.
#
find_base_address = `\0\0\0\0\x02\0\0\0\x04\0\0\0\x06\0\0\0\x08\0\0\0\x0A\0\0\0\x0C\0\0\0\x0E\0\0\0\x10\0\0\0`
# 9 values for replacement:
replace_int = 0000, 00, 00
replace_int = 0004, 02, 01
replace_int = 0008, 04, 02
replace_int = 000C, 06, 03
replace_int = 0010, 08, 04
replace_int = 0014, 10, 05
replace_int = 0018, 12, 06
replace_int = 001C, 14, 07
replace_int = 0020, 16, 08
</Patch>


<Patch>
patch_name = `Custom font sizes`
patch_enable = `yes`
#
## Changes the range of sizes on the font size slider so that there are more of
## the small sizes and fewer of the large sizes.
##
## With this patch enabled you will not be able to select the very large font
## sizes, but will be able to make finer adjustment to the smaller sizes.
#
# Font sizes depend on the device's screen resolution. Unpatched, the sizes
# increase in steps of 1 from the smallest size up to size 22, then in steps
# of 2 up to size 50, then in steps of 4 up to the largest size:
#
#  AuraOne:    18px - 194px (55 sizes)
#  GloHD:      14px - 150px (48 sizes)
#  AuraHD/H2O: 12px - 150px (50 sizes)
#  Glo/Aura:   12px - 122px (43 sizes)
#  Touch/Mini: 12px - 90px  (35 sizes)
#
# The example replacement values in this patch result in the following ranges,
# with increases in steps of 1 from the smallest size up to size 44, then
# steps of 2 up to size 68, then steps of 4 up to the largest size:
#
#  AuraOne:    18px - 132px (55 sizes)
#  GloHD:      14px - 112px (54 sizes)
#  AuraHD/H2O: 12px - 104px (54 sizes)
#  Glo/Aura:   12px - 88px (50 sizes)
#  Touch/Mini: 12px - 80px (48 sizes)
#
# Start with this font size: (AuraOne, GloHD, Others)
replace_int = 987C2A, 18, 18
replace_int = 987B0C, 14, 14
replace_int = 987AEE, 12, 12
#
# Add font sizes in increments of 1 until this size exceeded:
replace_int = 987B24, 21, 43
#
# Continue from this font size:
replace_int = 987B2A, 22, 44
#
# Add font sizes in increments of 2 until this size exceeded:
replace_int = 987B3A, 49, 67
#
# Continue from this font size:
replace_int = 987B44, 50, 68
#
# Add font sizes in increments of 4 until this size exceeded:
# (AuraOne, GloHD, AuraHD/H2O, Glo/Aura, Touch/Mini)
replace_int = 987C28, 195, 132
replace_int = 987B0A, 150, 112
replace_int = 987AF2, 150, 104
replace_int = 987C42, 122, 88
replace_int = 987C3E, 90, 80
</Patch>


<Patch>
patch_name = `Freedom to advanced fonts control`
patch_enable = `yes`
#
## This patch allows the advanced font options (weight/sharpness adjustments)
## to work with sideloaded fonts too. (KEPUB: OTF and TTF. EPUB: TTF only.)
#
# The following passes a junk pointer to N3FontTypeUtil::setupDropdown, but it
# seems the pointer is only passed on to ReadingSettings::getDefaultFontFamily
# where it is discarded without being dereferenced, so it should be safe?
# BEWARE: check whether this still holds in future firmware versions.
#
# N3FontTypeUtil.setupMonotypeDropdown(b,c)
# --> N3FontTypeUtil.setupDropdown(UNDEFINED,b,c)
replace_bytes = 83B7C2, 51 46 58 46, 52 46 59 46
replace_bytes = 83B7C6, C4 F7 98 E2, DC F7 14 E4
# N3FontTypeController.setupAdvancedOption(...) --> NOP
replace_bytes = 985880, A8 F6 80 E3, 00 46 00 46
replace_bytes = 9866A4, A7 F6 6E E4, 00 46 00 46
</Patch>


#
# The following three patches are mutually incompatible,
# don't enable more than one.
#
# `ePub fixed/adjustable top/bottom margins`
# `ePub fixed top/bottom margins`
# `ePub disable built-in body padding-bottom`
#

<Patch>
patch_name = `ePub fixed/adjustable top/bottom margins`
patch_enable = `yes`
# patch_group = `ePub padding-bottom alternatives`
#
## This patch sets the @page margin sizes in epubs, overriding any @page margin
## set in the book's CSS stylesheet (but not in the XPGT stylesheet, see below).
##
## By default the top and bottom margins are set to be adjustable, their size
## similar to the left/right margin size set by the adjustment slider. There
## are options to set the top and/or bottom margin to a fixed size instead.
##
## Note that @page margins are seperate from (and overlap) both the body margins
## set in the book and the left/right margins set from the adjustment slider,
## and are added to any page margins set in the Adobe XPGT stylesheet if the
## book has one (e.g. page-template.xpgt). For this reason you might want to
## consider using the Modify ePub Calibre plugin to remove any body margins and
## XPGT stylesheet margins before sideloading the book, or perhaps enabling the
## `Ignore ePub Adobe XPGT stylesheet (page-template.xpgt)` patch.
##
## Also note that a side-effect of this patch is that the body padding-bottom is
## removed from the built-in stylesheet, which means that there will no longer
## be a blank line added automatically at the end of chapters.
##
## See at the bottom of the patch for replacement values that can be used to
## tune the size of the margins to suit different devices and reading modes.
#
#
# Push an extra 8 bytes of scratch space onto the stack
replace_bytes = 484E28, C9 B0, CB B0
replace_bytes = 484E2C, 02 AF, 04 AF
# Save this value for the third stack argument of the following function call
replace_bytes = 4851C0, AD F8 04 20, 02 92 01 92
# getReadingLineHeight(...) --> getReadingLeftMargin(...)
replace_bytes = 485214, AB F7 C2 EE, 8C F7 36 ED
# (Setup call to QString.arg)
replace_bytes = 485218, 20 22 4F F0 FF 33, 00 23 01 22 0A 21
replace_bytes = 48521E, 07 F1 70 0A, 00 93 01 91
replace_bytes = 485222, AD F8 04 20 00 93, 42 43 92 08 01 3A
replace_bytes = 485228, 50 46 67 23, B8 BF 00 22
replace_bytes = 48522C, 00 22 49 46, 20 A8 49 46
# QString.arg(double, ...) --> QString.arg(int64, ...)
replace_bytes = 485230, 98 F7 DC E8, 8C F7 92 E8
#
# (There wasn't room to load sl above)
# mov r1,sl; --> adds r1,sp,#128
replace_bytes = 485234, 51 46, 20 A9
# (Remember to pop scratch space if necessary)
#
#      padding-bottom: %1em !important;\n
# --> }@page{margin:%1px 00px %1px}body{
find_base_address = `\x20padding-bottom: %1em !important;\n`
replace_string = 0000, `\x20padding-bottom: %1em !important;\n`, `}@page{margin:%1px 00px %1px}body{`
#
#
# *** Replacement values start here, don't change anything above ***
#
# Optional replacement value: Uncomment for a FIXED TOP MARGIN size in px,
# default 25px. Replacement value is margin size, two digits:
# (Leave commented out for an adjustable top margin.)
#replace_string = 000E, `%1`, `25`
#
# Optional replacement value: Uncomment for a FIXED BOTTOM MARGIN size in px,
# default 00px. Replacement value is margin size, two digits:
# (Leave commented out for an adjustable bottom margin.)
#replace_string = 0018, `%1`, `00`
#
# Optional replacement value: Uncomment to set the minimum LEFT/RIGHT MARGIN
# size in px, default 15px. (This margin will overlap the left/right margin
# set with the adjustment slider, not add to it.) Replacement value is margin
# size, two digits
#replace_string = 0013, `00`, `15`
#
base_address = 000000
#
# Replacement value: Sets the step-size of the ADJUSTABLE top/bottom margin
# (if any) in quarter-pixels. These suggested values should be very close to
# the 1% step size of the left/right margins set by the slider. Larger values
# will make the top/bottom margins larger than the left/right margins.
# Suggested values:
#   24 (Touch/Mini), 30 (Glo/Aura/Aura2ed), 43 (AuraHD/H2O/GloHD), 56 (Aura One)
replace_int = 48521A, 1, 30
#
# Replacement value: Set this to the size of the device's built-in top margin,
# in pixels. This value is subtracted from the adjustable top/bottom margin
# (if any) to compensate for any unremovable built-in top margin.
# Suggested values are:
#   0 For full-screen reading mode (fullScreenReading=true, all devices)
#  15 for normal reading mode (with custom or disabled footer, all devices)
replace_int = 485226, 1, 0
</Patch>


<Patch>
patch_name = `ePub fixed top/bottom margins`
patch_enable = `no`
# Multi-version patch: 4.7.10413 - 4.8.11073+
# patch_group = `ePub padding-bottom alternatives`
#
## This patch sets the @page margin sizes in epubs to fixed custom values,
## overriding any @page margin set in the book's CSS stylesheet. (But beware
## that some books also set page margins in an XPGT stylesheet which are added
## to any CSS @page margins, and those will not be affected by this patch).
#
#      padding-bottom: %1em !important;\n
# --> }@page{margin:00px 00px 00px}body{
find_base_address = `\x20padding-bottom: %1em !important;\n`
replace_string = 0000, `\x20padding-bottom: %1em !important;\n`, `}@page{margin:00px 00px 00px}body{`
#
#
# *** Replacement values start here, don't change anything above ***
#
# TOP MARGIN: Replacement value is the margin size (two digits) in pixels:
replace_string = 000E, `00`, `25`
#
# BOTTOM MARGIN: Replacement value is the margin size (two digits) in pixels:
replace_string = 0013, `00`, `00`
#
# Minimum LEFT/RIGHT MARGIN: (This margin will overlap the left/right margin
# set with the adjustment slider, not add to it.) Replacement value is margin
# size (two digits) in pixels:
replace_string = 0018, `00`, `00`
#
</Patch>


<Patch>
patch_name = `ePub disable built-in body padding-bottom`  
patch_enable = `no`
# Multi-version patch: 4.7.10413 - 4.8.11073+
# patch_group = `ePub padding-bottom alternatives`
#
## The built-in ePub stylesheet adds a line of padding at the bottom of the
## body element, to prevent the chapter ending on the last line of a page.
## This patch disables that stylesheet entry.
##
## This patch is not compatible with `ePub fixed/adjustable top/bottom margins`
## patch, which already removes this stylesheet entry to make room for other
## things.
#
#      padding-bottom: %1em !important;\n
# -->  _adding-bottom: %1em !important;\n
#
find_base_address = `\x20padding-bottom: %1em`
replace_string = 0001, `p`, `_`
</Patch>


#<Patch>
#patch_name = `Custom page refresh options`
# Missing, last working in version 4.5.9587
#</Patch>


<Patch>
patch_name = `Custom kepub default margins`
patch_enable = `yes`
#
## Sets the built-in minimum margin for KePub books and Pocket articles to
## zero, the same as it is in ePub books. This only affects left/right margins
## in normal reading mode, but all four margins in full-screen mode.
#
# Device = AuraOne, Type = pocket article or non-Japanese kepub
replace_int = 5DB56A, 32, 0
# Device = AuraOne, Type = Japanese kepub
replace_int = 5DB568, 60, 0
# Device = AuraHD/H2O/GloHD, Type = pocket article or non-Japanese kepub
replace_int = 5DB54A, 25, 0
# Device = AuraHD/H2O/GloHD, Type = Japanese kepub
replace_int = 5DB548, 45, 0
# Device = Other, Type = Any
replace_int = 5DB56E, 20, 0
</Patch>


<Patch>
patch_name = `Block WiFi firmware upgrade`
patch_enable = `yes`
# Multi-version patch: 4.7.10413 - 4.8.11073+
#
## WARNING: THIS IS A DANGEROUS PATCH! READ THE INFORMATION BELOW CAREFULLY!
##
## THIS PATCH IS UNTESTED, as there is no way to be sure it still works until
## the next firmware version is released. If it works then the firmware will
## not be upgraded during a WiFi sync, but you will still be able to upgrade
## manually or by syncing with the Kobo desktop.
##
## THIS PATCH COULD RESULT IN A BOOT LOOP when signing out of your Kobo account
## (Settings > Accounts > Sign out) or when invoking a factory reset from the
## device information menu (Settings > Device information > Factory reset).
## REMOVE THIS PATCH BEFORE USING EITHER OF THOSE OPTIONS.
## A factory reset invoked using the hardware methods (such as holding down the
## light button while switching on) should not be affected.
#
find_base_address = `UpgradeCheck/%1/%2/%3/%4/%5`
replace_string = 0013, `%3/%4/%5`, `k/99.9/5`
</Patch>


<Patch>
patch_name = `Custom footer (page number text)`
patch_enable = `yes`
# Multi-version patch: 2.8.1 - 4.8.11073+
#
## Shortens the page number text in the reading footer, and perhaps elsewhere.
## E.g. "Page 1 of 2" becomes "1 / 2" (not sure how it affects translations)
#
find_base_address = `Page %1 <i>of</i> %2`
replace_string = 0000, `Page %1 <i>of</i> %2`, `%1 / %2`
</Patch>


<Patch>
patch_name = `Custom Sleep/Power-off timeouts`
patch_enable = `yes`
#
## Changes the Sleep/Power-off timeout menu options from 5,10,15,30,45,60
## minutes to 10,20,30,60,120,240 minutes.
#
# Values displayed on both menus
replace_string = CFFE80, `5 mins\0`, `10 mins`
replace_string = CFFE88, `10 mins`, `20 mins`
replace_string = CFFE90, `15 mins`, `30 mins`
replace_string = CFFE98, `30 mins`, `1 hour`
replace_string = CFFEA0, `45 mins`, `2 hours`
replace_string = CFFEA8, `60 mins`, `4 hours`
# Actual values used for sleep menu
replace_int = A7E52C, 5, 10
replace_int = A7E576, 10, 20
replace_int = A7E5BA, 15, 30
replace_int = A7E5FE, 30, 60
replace_int = A7E642, 45, 120
replace_int = A7E686, 60, 240
# Actual values used for power menu
replace_int = A7E73A, 5, 10
replace_int = A7E77C, 10, 20
replace_int = A7E7BC, 15, 30
replace_int = A7E7FC, 30, 60
replace_int = A7E83C, 45, 120
replace_int = A7E87A, 60, 240
</Patch>


<Patch>
patch_name = `Set KePub hyphenation`
patch_enable = `yes`
#
## The built-in KePub stylesheet has a line "* { -webkit-hyphens: auto; }"
## to turn on hyphenation, but it is only used if the device's justification
## button is set to full justification. With this patch enabled hyphenation
## will always be turned on, regardless of justification button setting.
##
## (The publisher can still turn hyphenation off/on in the book's stylesheet.)
#
# Alternative 1: Always turn KePub hyphenation on
replace_bytes = 9FB7D4, 25 F6 E8 E1, 01 20 01 20
#
# Alternative 2: Never turn KePub hyphenation on
#replace_bytes = 9FB7D4, 25 F6 E8 E1, 00 20 00 20
</Patch>


<Patch>
patch_name = `Fix three KePub fullScreenReading bugs`
patch_enable = `yes`
# Multi-version patch: 4.7.10413 - 4.8.11073+
#
## (See http://www.mobileread.com/forums/showpost.php?p=3113460&postcount=16
## for screenshots and more information about the problems this patch fixes.)
##
## In full-screen reading mode (when the FullScreenReading feature setting is
## activated and the "Show header and footer" reading setting is unticked) the
## KePub reader has three problems:
##
## 1. If the book's stylesheet has non-zero body margin/padding, then the
##    text is shifted to the right and can be cut off at the right margin.
## 2. Characters with large side bearing values (such as italic f, J) can
##    be cut off if they appear at either end of a line.
## 3. Images which are supposed to be displayed inline (flowing with the text)
##    are instead displayed centred in a seperate block.
##
## This patch fixes those problems by replacing the following faulty style,
## which is the cause of problem 3.:
##
##   img {
##     display: block;
##     margin-left: auto !important;
##     margin-right: auto !important;
##     width: auto !important;
##     height: auto !important;
##   }
##
## with the following two styles, which work around problems 1. and 2.:
##
##   body {
##     margin: 0 !important;
##     padding: 0 !important;
##   }
##
##   body>div {
##     padding-left: 0.2em !important;
##     padding-right: 0.2em !important;
##   }
#
find_base_address = `img { display: block; margin-left: auto !important;`
replace_string = 0000, `img { display: block; margin-left: auto !important; margin-right: auto !important; width: auto !important; height: auto !important; }`, `body { margin: 0 !important; padding: 0 !important; }  body>div { padding-left: 0.2em !important; padding-right:  0.2em !important; }`
#
#
# Optional replacement values below (all relate to the second problem above):
#
# #et the amount of added padding: `1` = 0.1em, `2` = 0.2em, etc.
# 0.1em is enough for many fonts, but some (such as Georgia) need 0.2em.
#
replace_string = 0052, `2`, `2`
replace_string = 0074, `2`, `2`
#
# The default patch settings are suitable for horizontal languages only.
# Uncomment the following two replace_string lines for vertical languages only:
#
#replace_string = 004A, `left:`, `top:\x20`
#replace_string = 006A, `right: `, `bottom:`
#
# ... or the following two replace_string lines for both horizontal and vertical
# languages: (But note that this will cause the padding to be added at the
# beginning/end of each chapter too.)
#
#replace_string = 0049, `-left:`, `:    \x20`
#replace_string = 0056, `!important; padding-right:`, `\x20                        \x20`
#
# Sideloaded KePubs created with old versions of the KoboTouchExtended driver,
# and perhaps some other KePubs that haven't been through Kobo's EPUB2 to KEPUB
# conversion process, might not have a wrapper div to apply the padding styles
# to. Uncomment the following line to work around the second problem for these
# KePubs too. (But beware, this can have unwanted side effects such as extra
# space between paragraphs if the above option for both horizontal and vertical
# languages is uncommented too.)
#
#replace_string = 003C, `div`, `* \x20`
</Patch>


<Patch>
patch_name = `Force user line spacing in KePubs`
patch_enable = `yes`
# Multi-version patch: 4.7.10413 - 4.8.11073+
#
## This patch will allow the line spacing set by the slider to take effect
## in some problem KePub books with fixed linespacing (including ones where the
## publisher has used <div> instead of <p> for paragraphs, or wrapped each
## paragraph in a <span> and set the line-height on the span.) However it might
## also override some line spacing that would better be left fixed, e.g. it can
## cause problems with the spacing of paragraphs that begin with a raise-cap.
#
# body, p { line-height: %1 ... }  -->  body *  { line-height: %1 ... }
#
find_base_address = `body, p { line-height: %1`
replace_string = 0000, `body, p {`, `body *  {`
#
# Option: Comment out the replace_string line above and uncomment the one below
# for a less forceful version of this patch that has fewer side effects and
# should still work for most problem books, but not the ones where the publisher
# has set the line-height at <span> level.
#
# body, p { line-height: %1 ... }  -->  body,div,p{line-height:%1 ... }
#
#replace_string = 0000, `body, p { line-height: %`, `body,div,p{line-height:%`
</Patch>


<Patch>
patch_name = `Force user line spacing in ePubs (part 1 of 2)`
patch_enable = `yes`
# Multi-version patch: 4.7.10413 - 4.8.11073+
#
## This is part 1 of 2. Also enable part 2 in librmsdk.so.1.0.0.patch
##
## This patch prevents any line-height style set in the book's stylesheet from
## being recognised. It will spoil the formatting of some books, but will
## ensure that the line spacing set with the adjustment slider takes effect.
#
find_base_address = `\0\0\x20line-height: %1`
replace_string = 0003, `l`, `_`
</Patch>


#
# The following two patches are incompatible, don't enable both at once.
#
# `Un-force font-family override p tags (std epubs)`
# `Force user font-family in ePubs (Part 1 of 2)`
#

<Patch>
patch_name = `Un-force font-family override p tags (std epubs)`
patch_enable = `yes`
# Multi-version patch: 4.7.10413 - 4.8.11073+
# patch_group = `ePub force font alternatves`
#
## This patch allows the font set for paragraphs by the publisher in the epub
## stylesheet to override the font selected by the reader from the device.
#
#     body, p { font-family: -ua-default !important; }
# --> body    { font-family: -ua-default !important; }
#
find_base_address = `body, p { font-family: -ua`
replace_string = 0000, `body, p`,`body  \x20`
</Patch>


<Patch>
patch_name = `Force user font-family in ePubs (Part 1 of 2)`
patch_enable = `no`
# Multi-version patch: 4.7.10413 - 4.8.11073+
# patch_group = `ePub force font alternatves`
#
## This is part 1 of 2. Also enable part 2 in librmsdk.so.1.0.0.patch
##
## This patch prevents any font-family style set in the book's stylesheet from
## being recognised. It might spoil the style of books which use multiple fonts,
## but will ensure that the font-family set from the device menu takes effect.
#
find_base_address = `font-family: -ua-default; font-style: normal; font-weight: normal;`
replace_string = 0000, `f`, `_`
find_base_address = `font-family: -ua-default; font-style: italic; font-weight: normal;`
replace_string = 0000, `f`, `_`
find_base_address = `font-family: -ua-default; font-style: italic; font-weight: bold;`
replace_string = 0000, `f`, `_`
find_base_address = `font-family: -ua-default; font-style: normal; font-weight: bold;`
replace_string = 0000, `f`, `_`
find_base_address = `font-family: -ua-default !important;`
replace_string = 0000, `f`, `_`
</Patch>


<Patch>
patch_name = `ePub constant font sharpness`
patch_enable = `yes`
# Multi-version patch: 4.7.10413 - 4.8.11073+
#
## With this patch the ePub reader will use a constant sharpness value of 0.2,
## instead of the value set by the advanced font sharpness/weight slider. The
## slider sharpness values range from -0.4(min.) to 0.2(max.), default -0.0666.
#
# -kobo-font-sharpness: %1; --> -kobo-font-sharpness:0.2;
#
find_base_address = `\0\0 -kobo-font-sharpness: %1;`
#
# Replacement sharpness value:
replace_string = 0003, `-kobo-font-sharpness: %1`, `-kobo-font-sharpness:0.2`
</Patch>


<Patch>
patch_name = `KePub constant font sharpness`
patch_enable = `yes`
# Multi-version patch: 4.7.10413 - 4.8.11073+
#
## With this patch the KePub reader will use a constant sharpness value of 0.2,
## instead of the value set by the advanced font sharpness/weight slider. The
## slider sharpness values range from -0.4(min.) to 0.2(max.), default -0.0666.
#
#     body { -kobo-font-sharpness: %1; -kobo-font-thickness: %2; }\n
# --> body{-kobo-font-sharpness:0.0/*%1*/;-kobo-font-thickness:%2}\n
#
find_base_address = `body { -kobo-font-sharpness`
replace_string = 0000, `body { -kobo-font-sharpness: %1; -kobo-font-thickness: %2; }\n`, `body{-kobo-font-sharpness:0.0/*%1*/;-kobo-font-thickness:%2}\n`
#
# Replacement sharpness value:
replace_string = 005, `-kobo-font-sharpness:0.0`, `-kobo-font-sharpness:0.2`
</Patch>


<Patch>
patch_name = `Un-Force user text-align in div,p tags in KePubs`
patch_enable = `yes`
# Multi-version patch: 4.7.10413 - 4.8.11073+
#
## This patch allows the text alignment set by the publisher in the kepub
## stylesheet to override the alignment selected by the reader from the device.
#
#     div, p { text-align: %1 !important; }
# --> body   { text-align: %1 !important; }
#
find_base_address = `div, p { text-align: %1`
replace_string = 0000, `div, p {`, `body   {`
</Patch>


<Patch>
patch_name = `Always display chapter name on navigation menu`
patch_enable = `yes`
#
## Normally the <-> navigation menu only displays the current chapter name if
## [Reading settings > Display progress for:] is set to 'Current Chapter'.
## This patch causes the current chapter name to be displayed if 'Entire book'
## progress is selected as well. Works for both ePub and KePub books.
#
# in ReadingMenuScrubberController::setChapterAndProgressText(...)
#  progressTypeIsBookBased(...) --> False
replace_bytes = 99ACEC, 7F F6 DC E2, 00 20 00 20
</Patch>


<Patch>
patch_name = `Un-Force user font-family in KePubs`
patch_enable = `yes`
# Multi-version patch: 4.7.10413 - 4.8.11073+
#
## The KePub reader uses a very heavy-handed method of setting the font selected
## by the user, overriding all fonts set by the publisher in the book unless
## "Publisher Default" is selected.
##
## This patch lets the font-family set by the publisher in the KePub stylesheet
## override the font-family selected by the reader from the device in some
## cases, which allows a mix of user-selected and publisher-selected fonts.
## Alternatives 1-3 give increasing preference to the publisher-selected fonts.
#
find_base_address = `* { font-family: %1 !important; }\n`
#
# Alternatve 1:
#
#     * { font-family: %1 !important; }\n
# --> div,p{font-family:%1!important; }\n
#
replace_string = 0000, `* { font-family: %1 !important; }\n`, `div,p{font-family:%1!important; }\n`
#
# Alternatve 2: (Similar to ePub default)
#
#     * { font-family: %1 !important; }\n
# --> body,p{font-family:%1!important;}\n
#
#replace_string = 0000, `* { font-family: %1 !important; }\n`, `body,p{font-family:%1!important;}\n`
#
# Alternative 3: (similar to ePub with `Un-force font-family override p tags`)
#
#     * { font-family: %1 !important; }\n
# --> body{font-family:%1 !important; }\n
#
#replace_string = 0000, `* { font-family: %1 !important; }\n`, `body{font-family:%1 !important; }\n`
</Patch>


<Patch>
patch_name = `Un-force link decoration in KePubs`
patch_enable = `yes`
# Multi-version patch: 4.7.10413 - 4.8.11073+
#
## Disables the following link decoration CSS in the KePub stylesheet:
##
##  a:link, a:visited, a:hover, a:active {
##    border-bottom: 1px dotted black !important;
##    color: #696969 !important;
##  }
#
find_base_address = `a:link, a:visited, a:hover, a:active {`
#
# Disable border-bottom style:
replace_string = 0027, `b`, `_`
# Disable color style:
replace_string = 0053, `c`, `_`
#
</Patch>


<Patch>
patch_name = `KePub stylesheet additions`
patch_enable = `yes`
# Multi-version patch: 4.7.10413 - 4.8.11073+
#
## Makes room to add some additional CSS to the default KePub stylesheet.
#
# See replacement CSS below for examples.
#
find_base_address = `.KBHighlighting, .KBSearchResult {`
#
replace_string = 0000, `.KBHighlighting, .KBSearchResult { background-color: #C6C6C6 !important; } \t`, `.KBHighlighting,.KBSearchResult{background-color:#C6C6C6!important}.KBSearch`
#
replace_string = 004C, `.KBSearchResult, .KBAnnotation, .KBHighlighting { font-size: 100% !important; -webkit-text-combine: inherit !important; } \t`, `Result,.KBAnnotation,.KBHighlighting{font-size:100%!important;-webkit-text-combine:inherit!important}.KBAnnotation[writingM`
#
replace_string = 00C7, `.KBAnnotation[writingMode="horizontal-tb"], .KBAnnotationContinued[writingMode="horizontal-tb"] { border-bottom: 2px solid black !important; } \t`, `ode="horizontal-tb"],.KBAnnotationContinued[writingMode="horizontal-tb"]{border-bottom:2px solid black!important}.KBAnnotation[writingMode="vert`
#
replace_string = 0157, `.KBAnnotation[writingMode="vertical-rl"], .KBAnnotationContinued[writingMode="vertical-rl"] { border-right: 2px solid black !important; } \t`, `ical-rl"],.KBAnnotationContinued[writingMode="vertical-rl"]{border-right:2px solid black!important}.KBAnnotation[writingMode="vertical-lr"]`
#
replace_string = 01E2, `.KBAnnotation[writingMode="vertical-lr"], .KBAnnotationContinued[writingMode="vertical-lr"] { border-left: 2px solid black !important; }`, `,.KBAnnotationContinued[writingMode="vertical-lr"]{border-left:2px solid black!important}/*********************************************/`
#
#
# Replacement value: CSS string of exactly 47 characters in length:
#
# Example 1: Make full justification the default:
#
#replace_string = 023B, `/*********************************************/`, `body{text-align:justify                       }`
#
# Example 2: text-rendering:optimizeSpeed: Disables kerning, but fixes some
# rendering problems that affect fully justified text.
#
#replace_string = 023B, `/*********************************************/`, `body{text-rendering:optimizeSpeed             }`
#
# Example 3: text-rendering:optimizeLegibility: Enables ligatures, but causes
# some additional rendering problems for fully justified text.
#
#replace_string = 023B, `/*********************************************/`, `body{text-rendering:optimizeLegibility        }`
#
</Patch>


<Patch>
patch_name = `Change dicthtml strings to micthtml`
patch_enable = `yes`
#
## This patch is used for something to do with syncing and custom dictionaries.
## If you don't know what it does, then you probably don't need it.
#
replace_string = C9714C, `%1/dicthtml%2`, `%1/micthtml%2`
replace_string = C9715C, `dicthtml`, `micthtml`
replace_string = C971A4, `/mnt/onboard/.kobo/dict/dicthtml%1`, `/mnt/onboard/.kobo/dict/micthtml%1`
</Patch>


<Patch>
patch_name = `Allow searches on Extra dictionaries`
patch_enable = `yes`
# Multi-version patch: 4.7.10413 - 4.8.10956+
#
## To allow searches on Extra dictionaries change space character at end of
## "Extra: " to another char (ex: "Extra:_")
## The space char causes a non-desired "English - English" when searching on
## Extra dictionary from main menu.
#
find_base_address = `\0Extra:\x20`
replace_string = 0007, `\x20`, `_`
</Patch>


<Patch>
patch_name = `Ignore .otf fonts`
patch_enable = `yes`
# Multi-version patch: 4.7.10413 - 4.8.11073+
#
## Ignores all sideloaded and pre-installed .otf fonts.
## (Currently the only pre-installed .otf font is OpenDyslexic.)
## Embedded .otf fonts should continue to work as normal.
#
find_base_address = `*.otf`
replace_string = 000, `*`, `_`
</Patch>


<Patch>
patch_name = `Brightness fine control`
patch_enable = `yes`
#
## Sun symbols change the frontlight brightness in 2% instead of 1% steps.
#
# ValueDisplaySlider::setStep(1) --> ValueDisplaySlider::setStep(2)
replace_int = 95DCC2, 1, 2
</Patch>


<Patch>
patch_name = `Dictionary text font-family/font-size/line-height - beta`
patch_enable = `yes`
# Multi-version patch: 4.4.9298 - 4.8.11073+
#
# This patch allows you to to customise the appearance of the text 
# in the dictionary pop-up widget and full-screen dictionary page.
#
# You can change one or more of the following attributes:
#   - font-family
#   - font-size
#   - line-height
#
# Stage 1: Change DictionaryView to remove %1, %2 etc variables
#   from:
#       * { font: %1px %2; line-height: %5em; }
#       div.descriptionFont { font-family: %3; }
#       ol { font-size: %1px; font-weight: bold; margin-left: %4em; margin-top: 0px; }
#       ol p { font-size: %1px; font-weight:normal; }
#
#   to:
#       * { font-size: 40px; line-height: 1.3em; font-family: Georgia                                           ;}
#       ol   { margin-left: 1em; margin-top: 0px; }
#       ol p { font-size:  1em; font-weight:normal; }
#
# ##### N.B. Do not change the next 2 lines #####
find_base_address = `* { font: %1px %2; line-height: %5em; }`
replace_string = 0000, `* { font: %1px %2; line-height: %5em; }\ndiv.descriptionFont { font-family: %3; }\nol { font-size: %1px; font-weight: bold; margin-left: %4em; margin-top: 0px; }\nol p { font-size: %1px; font-weight:normal; }\n`, `* { font-size: 40px; line-height: 1.4em; font-family: Georgia                                           ;}\n        \nol   { margin-left: 1em; margin-top: 0px; }\nol p { font-size:  1em; font-weight:normal; }\n`
# ##### N.B. Do not change anything above this line #####
#
#
# Stage 2: N.B. You MUST keep old and new strings EXACTLY the same length
#
# Un-comment ONE ONLY of the following replace_string examples 
#   to change dictionary font-family from default Georgia:
#   - to a different built-in font
#   - to one of your sideloaded custom fonts
#
# Notes for changing font-family:
#   1.  Pad the shorter of the old/new strings with spaces to 
#       keep same length for both strings (see examples below)
#
#   2.  If the new font-family name (max. 50 chars) contains any spaces it must be
#       wrapped in "double-quotes" (see examples 2, 3)
#
#   3.  To change from Georgia to the Kobo default sans-serif font, Avenir, 
#       use either one of the following to achieve the same result:
#       - sans-serif
#       - "Avenir Next Medium"
# 
# Examples for customising font-family:
#replace_string = 0036, `Georgia   `, `sans-serif`
#replace_string = 0036, `Georgia    `, `"Gill Sans"`
#replace_string = 0036, `Georgia      `, `"Kobo Nickel"`
#replace_string = 0036, `Georgia `, `Bookerly`
#
# Un-comment and edit next line to change font-size
#replace_string = 000F, `40px`, `30px`
#
# Un-comment and edit next line to change line spacing
#replace_string = 0022, `1.4`, `1.3`
</Patch>


<Patch>
patch_name = `Clock display duration`
patch_enable = `yes`
#
## When the reading footer menu is opened a clock is displayed at the top left
## for 3 seconds before being replaced with the reading progress percentage.
## This patch changes the length of time the clock is displayed to 5 seconds.
#
replace_bytes = 9F6212, 40 F6 B8 31, 03 21 89 02
#
# Replacement value: Clock display duration in seconds:
replace_int = 9F6212, 3, 5
</Patch>


<Patch>
patch_name = `Disable QuickTurn`
patch_enable = `yes`
#
## Disables the QuickTurn feature.
#
# ReadingView::canQuickTurn() --> False
replace_bytes = 9EEB7C, 02 68 3E 4B, 00 20 70 47
</Patch>


#
# The following patches are alternatives, don't enable more than one.
#
# `Keyboard template (Mini/Touch/Glo/Aura)`
# `Keyboard template (AuraHD/H2O)`
# `Keyboard template (GloHD/AuraOne/H2O2)`
# `Cyrillic keyboard (Mini/Touch/Glo/Aura/AuraHD/H2O)`
# `Cyrillic keyboard (GloHD/AuraOne/H2O2)`
# `Arabic keyboard (Mini/Touch/Glo/Aura/AuraHD/H2O)`
# `Hebrew keyboard (Mini/Touch/Glo/Aura)`
# `Hebrew keyboard (AuraHD/H2O)`
# `Hebrew keyboard (GloHD/AuraOne/H2O2)`
# `Greek Keyboard (GloHD/AuraOne/H2O2)`
#

<Patch>
patch_name = `Keyboard template (Mini/Touch/Glo/Aura)`
patch_enable = `yes`
# patch_group = `Keyboard alternatives`
#
## Replaces keys on the Extended Latin keypad with custom alternatives.
## Edit the replace_string values below to select which keys to replace.
##
## Note that after the device boots, the keypad might just show blank squares
## until after the first book has been opened.
## Also note that long-pressing keys on the base keypad will no longer show
## the appropriate list of Extended Latin keys.
#
# Enable uppercase for `ß` (sharp s) key
replace_bytes = 8F7FFE, 00 24, 01 24
# Enable uppercase for `ƒ` (script f) key
replace_bytes = 8F8086, 80 F0 01 00, 01 20 01 20
# Replace layout sign
find_base_address = `ÉÀÇ`
replace_string = 0000, `ÉÀÇ`, `ÉÀÇ`
# Change keyboard layout
find_base_address = `ý\0\0ÿ\0\0š\0\0ž\0\0`
# Top row, left to right (10 keys):
replace_string = 0010, `æ\0`, `æ`
replace_string = 0014, `œ\0`, `œ`
replace_string = 0018, `þ\0`, `þ`
replace_string = 0008, `š\0`, `š`
replace_string = 000C, `ž\0`, `ž`
replace_string = 0020, `ŀ\0`, `ŀ`
replace_string = FFFFFFD4, `ƒ\0`, `ƒ`
replace_string = 0024, `μ\0`, `μ`
replace_string = 0028, `ª\0`, `ª`
replace_string = 002C, `º\0`, `º`
# Second row, left to right (11 keys):
replace_string = 0030, `à\0`, `à`
replace_string = 0048, `è\0`, `è`
replace_string = 0058, `ì\0`, `ì`
replace_string = 005C, `ò\0`, `ò`
replace_string = 0060, `ù\0`, `ù`
replace_string = 0034, `á\0`, `á`
replace_string = 004C, `é\0`, `é`
replace_string = 0064, `í\0`, `í`
replace_string = 0068, `ó\0`, `ó`
replace_string = 006C, `ú\0`, `ú`
replace_string = 0000, `ý\0`, `ý`
# Third row, left to right (11 keys):
replace_string = 0038, `â\0`, `â`
replace_string = 0050, `ê\0`, `ê`
replace_string = 0080, `î\0`, `î`
replace_string = 0070, `ô\0`, `ô`
replace_string = 0088, `û\0`, `û`
replace_string = 003C, `ä\0`, `ä`
replace_string = 0054, `ë\0`, `ë`
replace_string = 0084, `ï\0`, `ï`
replace_string = 0074, `ö\0`, `ö`
replace_string = 008C, `ü\0`, `ü`
replace_string = 0004, `ÿ\0`, `ÿ`
# Fourth row, left to right (10 keys):
replace_string = 0040, `ã\0`, `ã`
replace_string = 0090, `ñ\0`, `ñ`
replace_string = 0078, `õ\0`, `õ`
replace_string = 0044, `å\0`, `å`
replace_string = FFFFFFD0, `ß\0`, `ß`
replace_string = 0094, `ç\0`, `ç`
replace_string = 0098, `đ\0`, `đ`
replace_string = 007C, `ø\0`, `ø`
replace_string = 001C, `ĳ\0`, `ĳ`
replace_string = 009C, `ł\0`, `ł`
</Patch>


<Patch>
patch_name = `Keyboard template (AuraHD/H2O)`
patch_enable = `no`
# patch_group = `Keyboard alternatives`
#
## Replaces keys on the Extended Latin keypad with custom alternatives.
## Edit the replace_string values below to select which keys to replace.
##
## Note that after the device boots, the keypad might just show blank squares
## until after the first book has been opened.
## Also note that long-pressing keys on the base keypad will no longer show
## the appropriate list of Extended Latin keys.
#
# Enable uppercase for `ß` (sharp s) key
replace_bytes = 8F7FFE, 00 24, 01 24
# Replace layout sign
find_base_address = `ÉÀÇ`
replace_string = 0000, `ÉÀÇ`, `ÉÀÇ`
# Change keyboard layout
find_base_address = `ý\0\0ÿ\0\0š\0\0ž\0\0`
# (Top row cannot be changed.)
# Second row, left to right (12 keys):
replace_string = 0010, `æ\0`, `æ`
replace_string = 0030, `à\0`, `à`
replace_string = 0048, `è\0`, `è`
replace_string = 0058, `ì\0`, `ì`
replace_string = 005C, `ò\0`, `ò`
replace_string = 0060, `ù\0`, `ù`
replace_string = 0034, `á\0`, `á`
replace_string = 004C, `é\0`, `é`
replace_string = 0064, `í\0`, `í`
replace_string = 0068, `ó\0`, `ó`
replace_string = 006C, `ú\0`, `ú`
replace_string = 0000, `ý\0`, `ý`
# Third row, left to right (12 keys):
replace_string = 0014, `œ\0`, `œ`
replace_string = 0038, `â\0`, `â`
replace_string = 0050, `ê\0`, `ê`
replace_string = 0080, `î\0`, `î`
replace_string = 0070, `ô\0`, `ô`
replace_string = 0088, `û\0`, `û`
replace_string = 003C, `ä\0`, `ä`
replace_string = 0054, `ë\0`, `ë`
replace_string = 0084, `ï\0`, `ï`
replace_string = 0074, `ö\0`, `ö`
replace_string = 008C, `ü\0`, `ü`
replace_string = 0004, `ÿ\0`, `ÿ`
# Fourth row, left to right (10 keys):
replace_string = 0040, `ã\0`, `ã`
replace_string = 0090, `ñ\0`, `ñ`
replace_string = 0078, `õ\0`, `õ`
replace_string = 0044, `å\0`, `å`
replace_string = FFFFFFD0, `ß\0`, `ß`
replace_string = 0094, `ç\0`, `ç`
replace_string = 0098, `đ\0`, `đ`
replace_string = 007C, `ø\0`, `ø`
replace_string = 001C, `ĳ\0`, `ĳ`
replace_string = 009C, `ł\0`, `ł`
</Patch>


<Patch>
patch_name = `Keyboard template (GloHD/AuraOne/H2O2)`
patch_enable = `no`
# patch_group = `Keyboard alternatives`
#
## Replaces keys on the Extended Latin keypad with custom alternatives.
## Edit the replace_string values below to select which keys to replace.
##
## Note that after the device boots, the keypad might just show blank squares
## until after the first book has been opened.
## Also note that long-pressing keys on the base keypad will no longer show
## the appropriate list of Extended Latin keys.
#
# Enable uppercase for `ß` (sharp s) key
replace_bytes = 8F7FFE, 00 24, 01 24
# Replace layout sign
find_base_address = `ÉÀÇ`
replace_string = 0000, `ÉÀÇ`, `ÉÀÇ`
# Change keyboard layout
find_base_address = `ý\0\0ÿ\0\0š\0\0ž\0\0`
# Top row, left to right (10 keys):
replace_string = 0000, `ý\0`, `ý`
replace_string = 0004, `ÿ\0`, `ÿ`
replace_string = 0008, `š\0`, `š`
replace_string = 000C, `ž\0`, `ž`
replace_string = 0010, `æ\0`, `æ`
replace_string = 0014, `œ\0`, `œ`
replace_string = 0018, `þ\0`, `þ`
replace_string = FFFFFFD0, `ß\0`, `ß`
replace_string = 001C, `ĳ\0`, `ĳ`
replace_string = 0020, `ŀ\0`, `ŀ`
# Second row, left to right (10 keys):
replace_string = 0030, `à\0`, `à`
replace_string = 0034, `á\0`, `á`
replace_string = 0038, `â\0`, `â`
replace_string = 003C, `ä\0`, `ä`
replace_string = 0040, `ã\0`, `ã`
replace_string = 0044, `å\0`, `å`
replace_string = 0048, `è\0`, `è`
replace_string = 004C, `é\0`, `é`
replace_string = 0050, `ê\0`, `ê`
replace_string = 0054, `ë\0`, `ë`
# Third row, left to right (10 keys):
replace_string = 005C, `ò\0`, `ò`
replace_string = 0068, `ó\0`, `ó`
replace_string = 0070, `ô\0`, `ô`
replace_string = 0074, `ö\0`, `ö`
replace_string = 0078, `õ\0`, `õ`
replace_string = 007C, `ø\0`, `ø`
replace_string = 0058, `ì\0`, `ì`
replace_string = 0064, `í\0`, `í`
replace_string = 0080, `î\0`, `î`
replace_string = 0084, `ï\0`, `ï`
# Fourth row, left to right (8 keys):
replace_string = 0060, `ù\0`, `ù`
replace_string = 006C, `ú\0`, `ú`
replace_string = 0088, `û\0`, `û`
replace_string = 008C, `ü\0`, `ü`
replace_string = 0090, `ñ\0`, `ñ`
replace_string = 0094, `ç\0`, `ç`
replace_string = 0098, `đ\0`, `đ`
replace_string = 009C, `ł\0`, `ł`
</Patch>


<Patch>
patch_name = `Cyrillic keyboard (Mini/Touch/Glo/Aura/AuraHD/H2O)`
patch_enable = `no`
# patch_group = `Keyboard alternatives`
#
## Replaces keys on the Extended Latin keypad with Cyrillic alternatives.
##
## Note that after the device boots, the keypad might just show blank squares
## until after the first book has been opened.
## Also note that long-pressing keys on the base keypad will no longer show
## the appropriate list of Extended Latin keys.
#
# Enable uppercase for `ß` (sharp s) key
replace_bytes = 8F7FFE, 00 24, 01 24
# Replace layout sign
find_base_address = `ÉÀÇ`
replace_string = 0000, `ÉÀÇ`, `абв`
# Change keyboard layout
find_base_address = `ý\0\0ÿ\0\0š\0\0ž\0\0`
replace_string = 0010, `æ\0`, `й`
replace_string = 0014, `œ\0`, `ф`
replace_string = 0030, `à\0`, `ц`
replace_string = 0048, `è\0`, `у`
replace_string = 0058, `ì\0`, `к`
replace_string = 005C, `ò\0`, `е`
replace_string = 0060, `ù\0`, `н`
replace_string = 0034, `á\0`, `г`
replace_string = 004C, `é\0`, `ш`
replace_string = 0064, `í\0`, `щ`
replace_string = 0068, `ó\0`, `з`
replace_string = 006C, `ú\0`, `х`
replace_string = 0000, `ý\0`, `ъ`
replace_string = 0038, `â\0`, `ы`
replace_string = 0050, `ê\0`, `в`
replace_string = 0080, `î\0`, `а`
replace_string = 0070, `ô\0`, `п`
replace_string = 0088, `û\0`, `р`
replace_string = 003C, `ä\0`, `о`
replace_string = 0054, `ë\0`, `л`
replace_string = 0084, `ï\0`, `д`
replace_string = 0074, `ö\0`, `ж`
replace_string = 008C, `ü\0`, `э`
replace_string = 0004, `ÿ\0`, `ё`
replace_string = 0040, `ã\0`, `я`
replace_string = 0090, `ñ\0`, `ч`
replace_string = 0078, `õ\0`, `с`
replace_string = 0044, `å\0`, `м`
replace_string = FFFFFFD0, `ß\0`, `и`
replace_string = 0094, `ç\0`, `т`
replace_string = 0098, `đ\0`, `ь`
replace_string = 007C, `ø\0`, `б`
replace_string = 001C, `ĳ\0`, `ю`
replace_string = 009C, `ł\0`, `.`
</Patch>


<Patch>
patch_name = `Cyrillic Keyboard (GloHD/AuraOne/H2O2)`
patch_enable = `no`
# Multi-version patch: 4.7.10413 - 4.8.11073+
# patch_group = `Keyboard alternatives`
#
## Replaces keys on the Extended Latin keypad with Cyrillic alternatives.
##
## Note that after the device boots, the keypad might just show blank squares
## until after the first book has been opened.
## Also note that long-pressing keys on the base keypad will no longer show
## the appropriate list of Extended Latin keys.
#
# Replace layout sign
find_base_address = `ÉÀÇ`
replace_string = 0000, `ÉÀÇ`, `АБВ`
# Change keyboard layout
find_base_address = `ý\0\0ÿ\0\0š\0\0ž\0\0`
# Top row, left to right (10 keys):
replace_string = 0000, `ý\0`, `ё`
replace_string = 0004, `ÿ\0`, `х`
replace_string = 0008, `š\0`, `ъ`
replace_string = 000C, `ž\0`, `э`
replace_string = 0010, `æ\0`, `ю`
replace_string = 0014, `œ\0`, `-`
replace_string = 0018, `þ\0`, `.`
replace_string = FFFFFFD0, `ß\0`, `,`
replace_string = 001C, `ĳ\0`, `;`
replace_string = 0020, `ŀ\0`, `!`
# Second row, left to right (10 keys):
replace_string = 0030, `à\0`, `й`
replace_string = 0034, `á\0`, `ц`
replace_string = 0038, `â\0`, `у`
replace_string = 003C, `ä\0`, `к`
replace_string = 0040, `ã\0`, `е`
replace_string = 0044, `å\0`, `н`
replace_string = 0048, `è\0`, `г`
replace_string = 004C, `é\0`, `ш`
replace_string = 0050, `ê\0`, `щ`
replace_string = 0054, `ë\0`, `з`
# Third row, left to right (10 keys):
replace_string = 005C, `ò\0`, `ф`
replace_string = 0068, `ó\0`, `ы`
replace_string = 0070, `ô\0`, `в`
replace_string = 0074, `ö\0`, `а`
replace_string = 0078, `õ\0`, `п`
replace_string = 007C, `ø\0`, `р`
replace_string = 0058, `ì\0`, `о`
replace_string = 0064, `í\0`, `л`
replace_string = 0080, `î\0`, `д`
replace_string = 0084, `ï\0`, `ж`
# Fourth row, left to right (8 keys):
replace_string = 0060, `ù\0`, `я`
replace_string = 006C, `ú\0`, `ч`
replace_string = 0088, `û\0`, `с`
replace_string = 008C, `ü\0`, `м`
replace_string = 0090, `ñ\0`, `и`
replace_string = 0094, `ç\0`, `т`
replace_string = 0098, `đ\0`, `ь`
replace_string = 009C, `ł\0`, `б`
</Patch>


<Patch>
patch_name = `Arabic keyboard (Mini/Touch/Glo/Aura/AuraHD/H2O)`
patch_enable = `no`
# Multi-version patch: 4.7.10413 - 4.8.11073+
# patch_group = `Keyboard alternatives`
#
## Replaces keys on the Extended Latin keypad with Arabic alternatives.
##
## Note that after the device boots, the keypad might just show blank squares
## until after the first book has been opened.
## Also note that long-pressing keys on the base keypad will no longer show
## the appropriate list of Extended Latin keys.
#
# Replace layout sign
find_base_address = `ÉÀÇ`
replace_string = 0000, `ÉÀÇ`, `ع`
# Change keyboard layout
find_base_address = `ý\0\0ÿ\0\0š\0\0ž\0\0`
replace_string = 0010, `æ\0`, `ذ`
replace_string = 0014, `œ\0`, `ض`
replace_string = 0030, `à\0`, `ص`
replace_string = 0048, `è\0`, `ث`
replace_string = 0058, `ì\0`, `ق`
replace_string = 005C, `ò\0`, `ف`
replace_string = 0060, `ù\0`, `غ`
replace_string = 0034, `á\0`, `ع`
replace_string = 004C, `é\0`, `ه`
replace_string = 0064, `í\0`, `خ`
replace_string = 0068, `ó\0`, `ح`
replace_string = 006C, `ú\0`, `ج`
replace_string = 0000, `ý\0`, `د`
replace_string = 0038, `â\0`, `ش`
replace_string = 0050, `ê\0`, `س`
replace_string = 0080, `î\0`, `ي`
replace_string = 0070, `ô\0`, `ب`
replace_string = 0088, `û\0`, `ل`
replace_string = 003C, `ä\0`, `ا`
replace_string = 0054, `ë\0`, `ت`
replace_string = 0084, `ï\0`, `ن`
replace_string = 0074, `ö\0`, `م`
replace_string = 008C, `ü\0`, `ك`
replace_string = 0004, `ÿ\0`, `ط`
replace_string = 0040, `ã\0`, `ئ`
replace_string = 0090, `ñ\0`, `ء`
replace_string = 0078, `õ\0`, `ؤ`
replace_string = 0044, `å\0`, `ر`
replace_string = FFFFFFD0, `ß\0`, `ى`
replace_string = 0094, `ç\0`, `ة`
replace_string = 0098, `đ\0`, `و`
replace_string = 007C, `ø\0`, `ز`
replace_string = 001C, `ĳ\0`, `ظ`
replace_string = 009C, `ł\0`, `.`
</Patch>


<Patch>
patch_name = `Hebrew keyboard (Mini/Touch/Glo/Aura)`
patch_enable = `no`
# Multi-version patch: 4.7.10413 - 4.8.11073+
# patch_group = `Keyboard alternatives`
#
## Replaces keys on the Extended Latin keypad with Hebrew alternatives.
##
## Note that after the device boots, the keypad might just show blank squares
## until after the first book has been opened.
## Also note that long-pressing keys on the base keypad will no longer show
## the appropriate list of Extended Latin keys.
#
# Replace layout sign
find_base_address = `ÉÀÇ`
replace_string = 0000, `ÉÀÇ`, `אב`
# Change keyboard layout
find_base_address = `ý\0\0ÿ\0\0š\0\0ž\0\0`
# Top row, left to right (10 keys):
# You can edit the top row as you like
replace_string = 0010, `æ\0`, `!`
replace_string = 0014, `œ\0`, `?`
replace_string = 0018, `þ\0`, `-`
replace_string = 0008, `š\0`, `_`
replace_string = 000C, `ž\0`, `(`
replace_string = 0020, `ŀ\0`, `)`
replace_string = FFFFFFD4, `ƒ\0`, `[`
replace_string = 0024, `μ\0`, `]`
replace_string = 0028, `ª\0`, `:`
replace_string = 002C, `º\0`, `;`
# Second row, left to right (11 keys):
replace_string = 0030, `à\0`, `/`
replace_string = 0048, `è\0`, `'`
replace_string = 0058, `ì\0`, `ק`
replace_string = 005C, `ò\0`, `ר`
replace_string = 0060, `ù\0`, `א`
replace_string = 0034, `á\0`, `ט`
replace_string = 004C, `é\0`, `ו`
replace_string = 0064, `í\0`, `ן`
replace_string = 0068, `ó\0`, `ם`
replace_string = 006C, `ú\0`, `פ`
replace_string = 0000, `ý\0`, `"`
# Third row, left to right (11 keys):
replace_string = 0038, `â\0`, `ש`
replace_string = 0050, `ê\0`, `ד`
replace_string = 0080, `î\0`, `ג`
replace_string = 0070, `ô\0`, `כ`
replace_string = 0088, `û\0`, `ע`
replace_string = 003C, `ä\0`, `י`
replace_string = 0054, `ë\0`, `ח`
replace_string = 0084, `ï\0`, `ל`
replace_string = 0074, `ö\0`, `ך`
replace_string = 008C, `ü\0`, `ף`
replace_string = 0004, `ÿ\0`, `,`
# Bottom row, left to right (10 keys):
replace_string = 0040, `ã\0`, `ז`
replace_string = 0090, `ñ\0`, `ס`
replace_string = 0078, `õ\0`, `ב`
replace_string = 0044, `å\0`, `ה`
replace_string = FFFFFFD0, `ß\0`, `נ`
replace_string = 0094, `ç\0`, `מ`
replace_string = 0098, `đ\0`, `צ`
replace_string = 007C, `ø\0`, `ת`
replace_string = 001C, `ĳ\0`, `ץ`
replace_string = 009C, `ł\0`, `.`
</Patch>


<Patch>
patch_name = `Hebrew keyboard (AuraHD/H2O)`
patch_enable = `no`
# Multi-version patch: 4.7.10413 - 4.8.11073+
# patch_group = `Keyboard alternatives`
#
## Replaces keys on the Extended Latin keypad with Hebrew alternatives.
##
## Note that after the device boots, the keypad might just show blank squares
## until after the first book has been opened.
## Also note that long-pressing keys on the base keypad will no longer show
## the appropriate list of Extended Latin keys.
#
# Replace layout sign
find_base_address = `ÉÀÇ`
replace_string = 0000, `ÉÀÇ`, `אב`
# Change keyboard layout
find_base_address = `ý\0\0ÿ\0\0š\0\0ž\0\0`
# (Top row cannot be changed.)
# Second row, left to right (12 keys):
replace_string = 0010, `æ\0`, `/`
replace_string = 0030, `à\0`, `'`
replace_string = 0048, `è\0`, `ק`
replace_string = 0058, `ì\0`, `ר`
replace_string = 005C, `ò\0`, `א`
replace_string = 0060, `ù\0`, `ט`
replace_string = 0034, `á\0`, `ו`
replace_string = 004C, `é\0`, `ן`
replace_string = 0064, `í\0`, `ם`
replace_string = 0068, `ó\0`, `פ`
replace_string = 006C, `ú\0`, `]`
replace_string = 0000, `ý\0`, `[`
# Third row, left to right (12 keys):
replace_string = 0014, `œ\0`, `ש`
replace_string = 0038, `â\0`, `ד`
replace_string = 0050, `ê\0`, `ג`
replace_string = 0080, `î\0`, `כ`
replace_string = 0070, `ô\0`, `ע`
replace_string = 0088, `û\0`, `י`
replace_string = 003C, `ä\0`, `ח`
replace_string = 0054, `ë\0`, `ל`
replace_string = 0084, `ï\0`, `ך`
replace_string = 0074, `ö\0`, `ף`
replace_string = 008C, `ü\0`, `,`
replace_string = 0004, `ÿ\0`, `"`
# Fourth row, left to right (10 keys):
replace_string = 0040, `ã\0`, `ז`
replace_string = 0090, `ñ\0`, `ס`
replace_string = 0078, `õ\0`, `ב`
replace_string = 0044, `å\0`, `ה`
replace_string = FFFFFFD0, `ß\0`, `נ`
replace_string = 0094, `ç\0`, `מ`
replace_string = 0098, `đ\0`, `צ`
replace_string = 007C, `ø\0`, `ת`
replace_string = 001C, `ĳ\0`, `ץ`
replace_string = 009C, `ł\0`, `.`
</Patch>


<Patch>
patch_name = `Hebrew keyboard (GloHD/AuraOne/H2O2)`
patch_enable = `no`
# Multi-version patch: 4.7.10413 - 4.8.11073+
# patch_group = `Keyboard alternatives`
#
## Replaces keys on the Extended Latin keypad with Hebrew alternatives.
##
## Note that after the device boots, the keypad might just show blank squares
## until after the first book has been opened.
## Also note that long-pressing keys on the base keypad will no longer show
## the appropriate list of Extended Latin keys.
#
# Replace layout sign
find_base_address = `ÉÀÇ`
replace_string = 0000, `ÉÀÇ`, `אב`
# Change keyboard layout
find_base_address = `ý\0\0ÿ\0\0š\0\0ž\0\0`
# Top row, left to right (10 keys):
replace_string = 0000, `ý\0`, `/`
replace_string = 0004, `ÿ\0`, `'`
replace_string = 0008, `š\0`, `ק`
replace_string = 000C, `ž\0`, `ר`
replace_string = 0010, `æ\0`, `א`
replace_string = 0014, `œ\0`, `ט`
replace_string = 0018, `þ\0`, `ו`
replace_string = FFFFFFD0, `ß\0`, `ן`
replace_string = 001C, `ĳ\0`, `ם`
replace_string = 0020, `ŀ\0`, `פ`
# Second row, left to right (10 keys):
replace_string = 0030, `à\0`, `ש`
replace_string = 0034, `á\0`, `ד`
replace_string = 0038, `â\0`, `ג`
replace_string = 003C, `ä\0`, `כ`
replace_string = 0040, `ã\0`, `ע`
replace_string = 0044, `å\0`, `י`
replace_string = 0048, `è\0`, `ח`
replace_string = 004C, `é\0`, `ל`
replace_string = 0050, `ê\0`, `ך`
replace_string = 0054, `ë\0`, `ף`
# Third row, left to right (10 keys):
replace_string = 005C, `ò\0`, `ז`
replace_string = 0068, `ó\0`, `ס`
replace_string = 0070, `ô\0`, `ב`
replace_string = 0074, `ö\0`, `ה`
replace_string = 0078, `õ\0`, `נ`
replace_string = 007C, `ø\0`, `מ`
replace_string = 0058, `ì\0`, `צ`
replace_string = 0064, `í\0`, `ת`
replace_string = 0080, `î\0`, `ץ`
replace_string = 0084, `ï\0`, `.`
# Fourth row, left to right (8 keys):
replace_string = 0060, `ù\0`, `!`
replace_string = 006C, `ú\0`, `?`
replace_string = 0088, `û\0`, `,`
replace_string = 008C, `ü\0`, `"`
replace_string = 0090, `ñ\0`, `)`
replace_string = 0094, `ç\0`, `(`
replace_string = 0098, `đ\0`, `-`
replace_string = 009C, `ł\0`, `_`
</Patch>


<Patch>
patch_name = `Greek Keyboard (GloHD/AuraOne/H2O2)`
patch_enable = `no`
# Multi-version patch: 4.7.10413 - 4.8.11073+
# patch_group = `Keyboard alternatives`
#
## Replaces keys on the Extended Latin keypad with Greek alternatives.
##
## Note that after the device boots, the keypad might just show blank squares
## until after the first book has been opened.
## Also note that long-pressing keys on the base keypad will no longer show
## the appropriate list of Extended Latin keys.
#
# Replace layout sign Greek
find_base_address = `ÉÀÇ`
replace_string = 0000, `ÉÀÇ`, `ελ`
# Change keyboard layout
find_base_address = `ý\0\0ÿ\0\0š\0\0ž\0\0`
# Top row, left to right (10 keys):
replace_string = 0000, `ý\0`, `ό`
replace_string = 0004, `ÿ\0`, `ύ`
replace_string = 0008, `š\0`, `ϋ`
replace_string = 000C, `ž\0`, `:`
replace_string = 0010, `æ\0`, `ά`
replace_string = 0014, `œ\0`, `έ`
replace_string = 0018, `þ\0`, `ί`
replace_string = FFFFFFD0, `ß\0`, `/`
replace_string = 001C, `ĳ\0`, `-`
replace_string = 0020, `ŀ\0`, `_`
# Second row, left to right (10 keys):
replace_string = 0030, `à\0`, `;`
replace_string = 0034, `á\0`, `ς`
replace_string = 0038, `â\0`, `ε`
replace_string = 003C, `ä\0`, `ρ`
replace_string = 0040, `ã\0`, `τ`
replace_string = 0044, `å\0`, `υ`
replace_string = 0048, `è\0`, `θ`
replace_string = 004C, `é\0`, `ι`
replace_string = 0050, `ê\0`, `ο`
replace_string = 0054, `ë\0`, `π`
# Third row, left to right (10 keys):
replace_string = 005C, `ò\0`, `α`
replace_string = 0068, `ó\0`, `σ`
replace_string = 0070, `ô\0`, `δ`
replace_string = 0074, `ö\0`, `φ`
replace_string = 0078, `õ\0`, `γ`
replace_string = 007C, `ø\0`, `η`
replace_string = 0058, `ì\0`, `ξ`
replace_string = 0064, `í\0`, `κ`
replace_string = 0080, `î\0`, `λ`
replace_string = 0084, `ï\0`, `,`
# Fourth row, left to right (8 keys):
replace_string = 0060, `ù\0`, `ζ`
replace_string = 006C, `ú\0`, `χ`
replace_string = 0088, `û\0`, `ψ`
replace_string = 008C, `ü\0`, `ω`
replace_string = 0090, `ñ\0`, `β`
replace_string = 0094, `ç\0`, `ν`
replace_string = 0098, `đ\0`, `μ`
replace_string = 009C, `ł\0`, `.`
</Patch>
